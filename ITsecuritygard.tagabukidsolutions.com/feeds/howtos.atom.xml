<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>ITSecurityGard</title><link href="/" rel="alternate"></link><link href="/feeds/howtos.atom.xml" rel="self"></link><id>/</id><updated>2016-12-02T11:37:00+08:00</updated><entry><title>Data Driven Assesstment (diminishing FTW) via How to Shot Web</title><link href="/data-driven-assesstment-diminishing-ftw-via-how-to-shot-web.html" rel="alternate"></link><published>2016-12-02T11:37:00+08:00</published><updated>2016-12-02T11:37:00+08:00</updated><author><name>Jason Haddix</name></author><id>tag:,2016-12-02:data-driven-assesstment-diminishing-ftw-via-how-to-shot-web.html</id><summary type="html">&lt;h6&gt;How to test web app in minutes&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;1.Visit the search, registration, contact, password reset, and comment forms and hit them with your polyglot strings&lt;/li&gt;
&lt;li&gt;2.Scan those specific functions with Burps built-in scanner&lt;/li&gt;
&lt;li&gt;3.Check your cookie, log out, check cookie, log in, check cookie.Submit old cookie, see if access.&lt;/li&gt;
&lt;li&gt;4.Perform user enumeration checks on login, registration, and password reset.&lt;/li&gt;
&lt;li&gt;5.Do a reset and see if; the password comes plaintext, uses a URL based token, is predictable, can be used multiple times, or logs you in automatically&lt;/li&gt;
&lt;li&gt;6.Find numeric account identifiers anywhere in URLs and rotate them for context change&lt;/li&gt;
&lt;li&gt;7.Find the security-sensitive function(s) or files and see if vulnerable to non-auth browsing (idors), lower-auth browsing, CSRF, CSRF protection bypass, and see if they can be done over HTTP.&lt;/li&gt;
&lt;li&gt;8.Directory brute for top short list on SecLists&lt;/li&gt;
&lt;li&gt;9.Check upload functions for alternate file types that can execute code (xss or php/etc/etc)&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Security"></category><category term="Web"></category></entry></feed>